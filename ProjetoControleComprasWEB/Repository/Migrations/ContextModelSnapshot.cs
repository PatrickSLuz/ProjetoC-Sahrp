// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Agente", b =>
                {
                    b.Property<int>("AgenteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CargoId");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("Login");

                    b.Property<string>("NomeAgente");

                    b.Property<string>("Senha");

                    b.Property<int?>("SetorId");

                    b.HasKey("AgenteId");

                    b.HasIndex("CargoId");

                    b.HasIndex("SetorId");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("Domain.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("NomeCargo");

                    b.HasKey("CargoId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Domain.ItemPedido", b =>
                {
                    b.Property<int>("ItemPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao");

                    b.Property<int?>("PedidoId");

                    b.Property<int?>("ProdutosProdutoId");

                    b.Property<int>("Quantidade");

                    b.HasKey("ItemPedidoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutosProdutoId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("Domain.Orcamento", b =>
                {
                    b.Property<int>("OrcamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CpfCnpjFornecedor");

                    b.Property<string>("Descricao");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("NomeEmpresa");

                    b.Property<int?>("PedidoId");

                    b.Property<double>("Valor");

                    b.HasKey("OrcamentoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("Domain.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescMot");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<int?>("SolicitanteAgenteId");

                    b.Property<string>("Status");

                    b.HasKey("PedidoId");

                    b.HasIndex("SolicitanteAgenteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Domain.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("NomeProduto");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.Setor", b =>
                {
                    b.Property<int>("SetorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("NomeSetor");

                    b.HasKey("SetorId");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("Domain.Agente", b =>
                {
                    b.HasOne("Domain.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("Domain.Setor", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId");
                });

            modelBuilder.Entity("Domain.ItemPedido", b =>
                {
                    b.HasOne("Domain.Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId");

                    b.HasOne("Domain.Produto", "Produtos")
                        .WithMany()
                        .HasForeignKey("ProdutosProdutoId");
                });

            modelBuilder.Entity("Domain.Orcamento", b =>
                {
                    b.HasOne("Domain.Pedido", "Pedido")
                        .WithMany("Orcamentos")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("Domain.Pedido", b =>
                {
                    b.HasOne("Domain.Agente", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteAgenteId");
                });
#pragma warning restore 612, 618
        }
    }
}
